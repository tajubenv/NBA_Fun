devtools::install_github("abresler/nbastatR")
library(devtools)
install.packages("devtools")
library(devtools)
devtools::install_github("abresler/nbastatR")
library(nbastatR)
temp <- get_nba_team_stat_table(year.season_start = 2015,
period = 4,
division_against = "Atlantic",
outcome = "W")
library(nbastatR)
library(nbastatR)
devtools::install_github("abresler/nbastatR")
library(nbastatR)
devtools::install_github("abresler/nbastatR", `force = TRUE`)
devtools::install_github("abresler/nbastatR", force = TRUE)
library(nbastatR)
library('nbastatR')
library(tidyverse)
library(tidyverse)  # for data wrangling
library(janitor)  # for data cleaning
install.packages("janitor")
install.packages("rvest")
install.packages("rvest")
install.packages("corrplot")
library(tidyverse)  # for data wrangling
library(janitor)  # for data cleaning
library(rvest)      # for web scraping
library(corrplot)   # correlation plots
scrape_stats <- function(season = 2017){
#total stats
#scrape
url <- paste0("https://www.basketball-reference.com/leagues/NBA_",season,"_totals.html")
stats_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
#clean
player_stats_tot <- stats_tot %>%
remove_empty_cols() %>%
clean_names() %>%
dplyr::filter(!player=="Player") %>%
mutate_at(vars(-c(player,tm,pos)),as.numeric) %>%
mutate_at(vars(-c(player,tm,pos)), funs(replace(., is.na(.), 0))) %>%
as_tibble() %>%
group_by(player) %>%
slice(1) %>%
ungroup() %>%
select(-rk)
#per minute
url <- paste0("https://www.basketball-reference.com/leagues/NBA_",season,"_per_minute.html")
stats_pm <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
player_stats_pm <- stats_pm %>%
remove_empty_cols() %>%
clean_names() %>%
dplyr::filter(!player=="Player") %>%
mutate_at(vars(-c(player,tm,pos)),as.numeric) %>%
mutate_at(vars(-c(player,tm,pos)), funs(replace(., is.na(.), 0))) %>%
as_tibble() %>%
group_by(player) %>%
slice(1) %>%
ungroup() %>%
rename_at(vars(9:29),funs(paste0(.,"_pm"))) %>%
select(-rk)
#advanced
url <- paste0("https://www.basketball-reference.com/leagues/NBA_",season,"_advanced.html")
stats_adv <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
player_stats_adv <- stats_adv %>%
remove_empty_cols() %>%
clean_names() %>%
dplyr::filter(!player=="Player") %>%
mutate_at(vars(-c(player,tm,pos)),as.numeric) %>%
mutate_at(vars(-c(player,tm,pos)), funs(replace(., is.na(.), 0))) %>%
as_tibble() %>%
group_by(player) %>%
slice(1) %>%
ungroup() %>%
select(-rk)
player_stats <- full_join(player_stats_tot,player_stats_pm,
by = c("player", "pos", "age", "tm", "g", "gs", "mp")) %>%
full_join(player_stats_adv,
by = c("player", "pos", "age", "tm", "g", "mp"))
return(player_stats)
}
temp <- scrape_stats(season = 2018)
temp <- scrape_stats(season = 2018)
```
scrape_stats <- function(season = 2017){
#total stats
#scrape
url <- paste0("https://www.basketball-reference.com/leagues/NBA_",season,"_totals.html")
stats_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
#clean
player_stats_tot <- stats_tot %>%
remove_empty("cols") %>%
clean_names() %>%
dplyr::filter(!player=="Player") %>%
mutate_at(vars(-c(player,tm,pos)),as.numeric) %>%
mutate_at(vars(-c(player,tm,pos)), funs(replace(., is.na(.), 0))) %>%
as_tibble() %>%
group_by(player) %>%
slice(1) %>%
ungroup() %>%
select(-rk)
#per minute
url <- paste0("https://www.basketball-reference.com/leagues/NBA_",season,"_per_minute.html")
stats_pm <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
player_stats_pm <- stats_pm %>%
remove_empty("cols") %>%
clean_names() %>%
dplyr::filter(!player=="Player") %>%
mutate_at(vars(-c(player,tm,pos)),as.numeric) %>%
mutate_at(vars(-c(player,tm,pos)), funs(replace(., is.na(.), 0))) %>%
as_tibble() %>%
group_by(player) %>%
slice(1) %>%
ungroup() %>%
rename_at(vars(9:29),funs(paste0(.,"_pm"))) %>%
select(-rk)
#advanced
url <- paste0("https://www.basketball-reference.com/leagues/NBA_",season,"_advanced.html")
stats_adv <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
player_stats_adv <- stats_adv %>%
remove_empty("cols") %>%
clean_names() %>%
dplyr::filter(!player=="Player") %>%
mutate_at(vars(-c(player,tm,pos)),as.numeric) %>%
mutate_at(vars(-c(player,tm,pos)), funs(replace(., is.na(.), 0))) %>%
as_tibble() %>%
group_by(player) %>%
slice(1) %>%
ungroup() %>%
select(-rk)
player_stats <- full_join(player_stats_tot,player_stats_pm,
by = c("player", "pos", "age", "tm", "g", "gs", "mp")) %>%
full_join(player_stats_adv,
by = c("player", "pos", "age", "tm", "g", "mp"))
return(player_stats)
}
temp <- scrape_stats(season = 2018)
head(temp)
ggplot(temp, aes(pos, ts_percent)) + geom_boxplot()
