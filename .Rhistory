library(rvest)      # for web scraping
library(corrplot)   # correlation plots
scrape_stats <- function(season = 2017){
#total stats
#scrape
url <- paste0("https://www.basketball-reference.com/leagues/NBA_",season,"_totals.html")
stats_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
#clean
player_stats_tot <- stats_tot %>%
remove_empty_cols() %>%
clean_names() %>%
dplyr::filter(!player=="Player") %>%
mutate_at(vars(-c(player,tm,pos)),as.numeric) %>%
mutate_at(vars(-c(player,tm,pos)), funs(replace(., is.na(.), 0))) %>%
as_tibble() %>%
group_by(player) %>%
slice(1) %>%
ungroup() %>%
select(-rk)
#per minute
url <- paste0("https://www.basketball-reference.com/leagues/NBA_",season,"_per_minute.html")
stats_pm <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
player_stats_pm <- stats_pm %>%
remove_empty_cols() %>%
clean_names() %>%
dplyr::filter(!player=="Player") %>%
mutate_at(vars(-c(player,tm,pos)),as.numeric) %>%
mutate_at(vars(-c(player,tm,pos)), funs(replace(., is.na(.), 0))) %>%
as_tibble() %>%
group_by(player) %>%
slice(1) %>%
ungroup() %>%
rename_at(vars(9:29),funs(paste0(.,"_pm"))) %>%
select(-rk)
#advanced
url <- paste0("https://www.basketball-reference.com/leagues/NBA_",season,"_advanced.html")
stats_adv <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
player_stats_adv <- stats_adv %>%
remove_empty_cols() %>%
clean_names() %>%
dplyr::filter(!player=="Player") %>%
mutate_at(vars(-c(player,tm,pos)),as.numeric) %>%
mutate_at(vars(-c(player,tm,pos)), funs(replace(., is.na(.), 0))) %>%
as_tibble() %>%
group_by(player) %>%
slice(1) %>%
ungroup() %>%
select(-rk)
player_stats <- full_join(player_stats_tot,player_stats_pm,
by = c("player", "pos", "age", "tm", "g", "gs", "mp")) %>%
full_join(player_stats_adv,
by = c("player", "pos", "age", "tm", "g", "mp"))
return(player_stats)
}
temp <- scrape_stats(season = 2018)
temp <- scrape_stats(season = 2018)
```
scrape_stats <- function(season = 2017){
#total stats
#scrape
url <- paste0("https://www.basketball-reference.com/leagues/NBA_",season,"_totals.html")
stats_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
#clean
player_stats_tot <- stats_tot %>%
remove_empty("cols") %>%
clean_names() %>%
dplyr::filter(!player=="Player") %>%
mutate_at(vars(-c(player,tm,pos)),as.numeric) %>%
mutate_at(vars(-c(player,tm,pos)), funs(replace(., is.na(.), 0))) %>%
as_tibble() %>%
group_by(player) %>%
slice(1) %>%
ungroup() %>%
select(-rk)
#per minute
url <- paste0("https://www.basketball-reference.com/leagues/NBA_",season,"_per_minute.html")
stats_pm <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
player_stats_pm <- stats_pm %>%
remove_empty("cols") %>%
clean_names() %>%
dplyr::filter(!player=="Player") %>%
mutate_at(vars(-c(player,tm,pos)),as.numeric) %>%
mutate_at(vars(-c(player,tm,pos)), funs(replace(., is.na(.), 0))) %>%
as_tibble() %>%
group_by(player) %>%
slice(1) %>%
ungroup() %>%
rename_at(vars(9:29),funs(paste0(.,"_pm"))) %>%
select(-rk)
#advanced
url <- paste0("https://www.basketball-reference.com/leagues/NBA_",season,"_advanced.html")
stats_adv <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
player_stats_adv <- stats_adv %>%
remove_empty("cols") %>%
clean_names() %>%
dplyr::filter(!player=="Player") %>%
mutate_at(vars(-c(player,tm,pos)),as.numeric) %>%
mutate_at(vars(-c(player,tm,pos)), funs(replace(., is.na(.), 0))) %>%
as_tibble() %>%
group_by(player) %>%
slice(1) %>%
ungroup() %>%
select(-rk)
player_stats <- full_join(player_stats_tot,player_stats_pm,
by = c("player", "pos", "age", "tm", "g", "gs", "mp")) %>%
full_join(player_stats_adv,
by = c("player", "pos", "age", "tm", "g", "mp"))
return(player_stats)
}
temp <- scrape_stats(season = 2018)
head(temp)
ggplot(temp, aes(pos, ts_percent)) + geom_boxplot()
game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
library(tidyverse)  # for data wrangling
library(janitor)  # for data cleaning
library(rvest)      # for web scraping
library(corrplot)   # correlation plots
game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
head(pbp_tot)
game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
head(pbp_tot)
colnames(pbp_tot)
colnames(pbp_tot[,3]) <- "OKC Score"
colnames(pbp_tot)[2]"
colnames(pbp_tot)[2]
colnames(pbp_tot)[2]
colnames(pbp_tot)
colnames(pbp_tot)""
colnames(pbp_tot)
colnames(pbp_tot)[3]
colnames(pbp_tot)[3] <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(php_tot)
colnames(pbp_tot)
colnames(pbp_tot)[5] <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)
pbt_tot %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers-Score")) %>% head()
pbp_tot %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers-Score")) %>% head()
pbp_tot %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>% head()
sum(is.na(pbp_tot$`Oklahoma City-Score`))
colnames(pbp_tot)
pbp_tot %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(!is.na(`Oklahoma City-Score`),
!is.na(`LA Lakers-Score`)) head()
pbp_tot %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(!is.na(`Oklahoma City-Score`),
!is.na(`LA Lakers-Score`)) %>% head()
`LA Lakers-Score` != "") %>% head()
pbp_tot %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(`Oklahoma City-Score` != "",
`LA Lakers-Score` != "") %>% head()
pbp_tot %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>% head()
pbp_tot %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter((`Oklahoma City-Score` != "") |
(`LA Lakers-Score` != "")) %>% head()
game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
head(pbp_tot)
colnames(pbp_tot)[3] <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[5] <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)
pbp_tot %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter((`Oklahoma City-Score` != "") %>%
filter(`LA Lakers-Score` != "")) %>% head()
pbp_tot %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter((`Oklahoma City-Score` != "") %>%
filter(`LA Lakers-Score` != "")) %>% head()
pbp_tot %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(`Oklahoma City-Score` != "") %>%
filter(`LA Lakers-Score` != "") %>% head()
pbp_tot %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(`Oklahoma City-Score` != "", Team == "Oklahoma City") %>% head()
game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
head(pbp_tot)
colnames(pbp_tot)[3] <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[5] <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)
pbp_tot %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>% head()
#(`LA Lakers-Score` != "")) %>% head()
sum(is.na(pbp_tot$`Oklahoma City-Score`))
game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
head(pbp_tot)
colnames(pbp_tot)[3] <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[5] <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)
## Need to split by Quarter
pbp_tot %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>% head()
#(`LA Lakers-Score` != "")) %>% head()
sum(is.na(pbp_tot$`Oklahoma City-Score`))
## Need to split by Quarter
str_detect(pbp_tot$`Oklahoma City-Score`, "Q1")
## Need to split by Quarter
pbp_tot[str_detect(pbp_tot$`Oklahoma City-Score`, "1st Q"),]
game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
head(pbp_tot)
colnames(pbp_tot)[3] <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[5] <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)
## Need to split by Quarter
pbp_tot[str_detect(pbp_tot$`Oklahoma City-Score`, "2nd Q"),]
## Need to split by Quarter
index(pbp_tot[str_detect(pbp_tot$`Oklahoma City-Score`, "2nd Q"),])
## Need to split by Quarter
which(pbp_tot[str_detect(pbp_tot$`Oklahoma City-Score`, "2nd Q"),])
## Need to split by Quarter
which(str_detect(pbp_tot$`Oklahoma City-Score`, "2nd Q"))
first_q <- pbp_tot[1:(secon_lim - 1),]
first_q <- pbp_tot[1:(second_lim - 1),]
## Need to split by Quarter
second_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "2nd Q"))
third_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),]
second_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "2nd Q"))
third_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),] %>% mutate(Quarter = 1)
second_q <- pbp_tot[(second_lim + 1):(third_lim - 1),] %>% mutate(Quarter = 2)
third_q <- pbp_tot[(third_lim + 1):(fourth_lim - 1),] %>% mutate(Quarter = 3)
fourth_q <- pbp_tot[(fourth_lim + 1):length(pbp_tot),] %>% mutate(Quarter = 4)
pbp_fix <- append(first_q, second_q, third_q, fourth_q)
game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
head(pbp_tot)
colnames(pbp_tot)[3] <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[5] <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)
## Need to split by Quarter
second_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "2nd Q"))
third_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),] %>% mutate(Quarter = 1)
second_q <- pbp_tot[(second_lim + 1):(third_lim - 1),] %>% mutate(Quarter = 2)
third_q <- pbp_tot[(third_lim + 1):(fourth_lim - 1),] %>% mutate(Quarter = 3)
fourth_q <- pbp_tot[(fourth_lim + 1):length(pbp_tot),] %>% mutate(Quarter = 4)
pbp_fix <- append(first_q, second_q) %>% append(third_q) %>% append(fourth_q)
head(pbp_fix)
game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
head(pbp_tot)
colnames(pbp_tot)[3] <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[5] <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)
## Need to split by Quarter
second_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "2nd Q"))
third_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),] %>% mutate(Quarter = 1)
second_q <- pbp_tot[(second_lim + 1):(third_lim - 1),] %>% mutate(Quarter = 2)
third_q <- pbp_tot[(third_lim + 1):(fourth_lim - 1),] %>% mutate(Quarter = 3)
fourth_q <- pbp_tot[(fourth_lim + 1):length(pbp_tot),] %>% mutate(Quarter = 4)
pbp_fix <- rbind(first_q, second_q, third_q, fourth_q)
head(pbp_fix)
pbp_fix %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>% head()
pbp_fix %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>%
gather(key = "Team_Score", value = "Delta Score", c("Oklahoma City-Score","LA Lakers-Score")) %>% head()
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>%
gather(key = "Team_Score", value = "Delta Score", c("Oklahoma City-Score","LA Lakers-Score")) %>% filter(length(`Delta Score`) > 3)
game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
head(pbp_tot)
colnames(pbp_tot)[3] <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[5] <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)
## Need to split by Quarter
second_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "2nd Q"))
third_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),] %>% mutate(Quarter = 1)
second_q <- pbp_tot[(second_lim + 1):(third_lim - 1),] %>% mutate(Quarter = 2)
third_q <- pbp_tot[(third_lim + 1):(fourth_lim - 1),] %>% mutate(Quarter = 3)
fourth_q <- pbp_tot[(fourth_lim + 1):length(pbp_tot),] %>% mutate(Quarter = 4)
pbp_fix <- rbind(first_q, second_q, third_q, fourth_q)
head(pbp_fix)
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>%
gather(key = "Team_Score", value = "Delta Score", c("Oklahoma City-Score","LA Lakers-Score")) %>% filter(length(`Delta Score`) > 3)
#(`LA Lakers-Score` != "")) %>% head()
head(pbp_final)
game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
head(pbp_tot)
colnames(pbp_tot)[3] <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[5] <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)
## Need to split by Quarter
second_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "2nd Q"))
third_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),] %>% mutate(Quarter = 1)
second_q <- pbp_tot[(second_lim + 1):(third_lim - 1),] %>% mutate(Quarter = 2)
third_q <- pbp_tot[(third_lim + 1):(fourth_lim - 1),] %>% mutate(Quarter = 3)
fourth_q <- pbp_tot[(fourth_lim + 1):length(pbp_tot),] %>% mutate(Quarter = 4)
pbp_fix <- rbind(first_q, second_q, third_q, fourth_q)
head(pbp_fix)
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>%
gather(key = "Team_Score", value = "Delta Score", c("Oklahoma City-Score","LA Lakers-Score")) %>% filter(length(`Delta Score`) > 3) %>%
mutate(gametime = period*720 - as.numeric(ms(time)))
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>%
gather(key = "Team_Score", value = "Delta Score", c("Oklahoma City-Score","LA Lakers-Score")) %>% filter(length(`Delta Score`) > 3) %>%
mutate(gametime = Quarter*720 - as.numeric(ms(time)))
library(lubridate)
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>%
gather(key = "Team_Score", value = "Delta Score", c("Oklahoma City-Score","LA Lakers-Score")) %>% filter(length(`Delta Score`) > 3) %>%
mutate(gametime = Quarter*720 - as.numeric(ms(time)))
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>%
gather(key = "Team_Score", value = "Delta Score", c("Oklahoma City-Score","LA Lakers-Score")) %>% filter(length(`Delta Score`) > 3) %>%
mutate(gametime = Quarter*720 - as.numeric(ms(time)))
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>%
gather(key = "Team_Score", value = "Delta Score", c("Oklahoma City-Score","LA Lakers-Score")) %>% filter(length(`Delta Score`) > 3) %>%
mutate(gametime = Quarter*720 - ms(time))
head(pbp_final)
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>%
gather(key = "Team_Score", value = "Delta Score", c("Oklahoma City-Score","LA Lakers-Score")) %>% filter(length(`Delta Score`) > 3) %>%
mutate(gametime = Quarter*720 - as.numeric(ms(Time)))
head(pbp_final)
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>%
gather(key = "Team_Score", value = "Delta Score", c("Oklahoma City-Score","LA Lakers-Score")) %>% filter(length(`Delta Score`) > 3) %>%
mutate(gametime = Quarter*720 - as.numeric(ms(Time))) %>% arrange(gametime)
head(pbp_final)
value <- scrape_pbp("201911190LAL")
scrape_pbp <- function(game_url){
#game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
#head(pbp_tot)
colnames(pbp_tot)[3] <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[5] <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)
## Need to split by Quarter
second_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "2nd Q"))
third_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),] %>% mutate(Quarter = 1)
second_q <- pbp_tot[(second_lim + 1):(third_lim - 1),] %>% mutate(Quarter = 2)
third_q <- pbp_tot[(third_lim + 1):(fourth_lim - 1),] %>% mutate(Quarter = 3)
fourth_q <- pbp_tot[(fourth_lim + 1):length(pbp_tot),] %>% mutate(Quarter = 4)
pbp_fix <- rbind(first_q, second_q, third_q, fourth_q)
#head(pbp_fix)
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>%
gather(key = "Team_Score", value = "Delta Score", c("Oklahoma City-Score","LA Lakers-Score")) %>% filter(length(`Delta Score`) > 3) %>%
mutate(gametime = Quarter*720 - as.numeric(ms(Time))) %>% arrange(gametime)
pbp_final
}
value <- scrape_pbp("201911190LAL")
head(value)
scrape_pbp <- function(game_url){
#game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
#head(pbp_tot)
colnames(pbp_tot)[3] <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[5] <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)
## Need to split by Quarter
second_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "2nd Q"))
third_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),] %>% mutate(Quarter = 1)
second_q <- pbp_tot[(second_lim + 1):(third_lim - 1),] %>% mutate(Quarter = 2)
third_q <- pbp_tot[(third_lim + 1):(fourth_lim - 1),] %>% mutate(Quarter = 3)
fourth_q <- pbp_tot[(fourth_lim + 1):length(pbp_tot),] %>% mutate(Quarter = 4)
pbp_fix <- rbind(first_q, second_q, third_q, fourth_q)
#head(pbp_fix)
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>%
gather(key = "Team_Score", value = "Delta Score", c("Oklahoma City-Score","LA Lakers-Score")) %>% filter(length(`Delta Score`) > 3) %>%
mutate(gametime = Quarter*720 - as.numeric(ms(Time))) %>% filter(gametime > 0) %>%arrange(gametime)
pbp_final
}
value <- scrape_pbp("201911190LAL")
head(value)
scrape_pbp <- function(game_url){
#game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
#head(pbp_tot)
colnames(pbp_tot)[3] <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[5] <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)
## Need to split by Quarter
second_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "2nd Q"))
third_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),] %>% mutate(Quarter = 1)
second_q <- pbp_tot[(second_lim + 1):(third_lim - 1),] %>% mutate(Quarter = 2)
third_q <- pbp_tot[(third_lim + 1):(fourth_lim - 1),] %>% mutate(Quarter = 3)
fourth_q <- pbp_tot[(fourth_lim + 1):length(pbp_tot),] %>% mutate(Quarter = 4)
pbp_fix <- rbind(first_q, second_q, third_q, fourth_q)
#head(pbp_fix)
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>%
gather(key = "Team_Score", value = "Delta Score", c("Oklahoma City-Score","LA Lakers-Score")) %>% filter(length(`Delta Score`) > 3) %>%
filter(`Delta Score` != '') %>%
mutate(gametime = Quarter*720 - as.numeric(ms(Time))) %>% filter(gametime > 0) %>%arrange(gametime)
pbp_final
}
value <- scrape_pbp("201911190LAL")
head(value)
