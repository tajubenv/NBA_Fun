pbp_tot = pbp_tot[-1, ]
#head(pbp_tot)
colnames(pbp_tot)[3] <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[5] <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)
## Need to split by Quarter
second_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "2nd Q"))
third_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),] %>% mutate(Quarter = 1)
second_q <- pbp_tot[(second_lim + 1):(third_lim - 1),] %>% mutate(Quarter = 2)
third_q <- pbp_tot[(third_lim + 1):(fourth_lim - 1),] %>% mutate(Quarter = 3)
fourth_q <- pbp_tot[(fourth_lim + 1):length(pbp_tot),] %>% mutate(Quarter = 4)
pbp_fix <- rbind(first_q, second_q, third_q, fourth_q)
#head(pbp_fix)
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>%
gather(key = "Team_Score", value = "Delta Score", c("Oklahoma City-Score","LA Lakers-Score")) %>% filter(length(`Delta Score`) > 3) %>%
mutate(gametime = Quarter*720 - as.numeric(ms(Time))) %>% arrange(gametime)
pbp_final
}
value <- scrape_pbp("201911190LAL")
head(value)
scrape_pbp <- function(game_url){
#game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
#head(pbp_tot)
colnames(pbp_tot)[3] <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[5] <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)
## Need to split by Quarter
second_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "2nd Q"))
third_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),] %>% mutate(Quarter = 1)
second_q <- pbp_tot[(second_lim + 1):(third_lim - 1),] %>% mutate(Quarter = 2)
third_q <- pbp_tot[(third_lim + 1):(fourth_lim - 1),] %>% mutate(Quarter = 3)
fourth_q <- pbp_tot[(fourth_lim + 1):length(pbp_tot),] %>% mutate(Quarter = 4)
pbp_fix <- rbind(first_q, second_q, third_q, fourth_q)
#head(pbp_fix)
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>%
gather(key = "Team_Score", value = "Delta Score", c("Oklahoma City-Score","LA Lakers-Score")) %>% filter(length(`Delta Score`) > 3) %>%
mutate(gametime = Quarter*720 - as.numeric(ms(Time))) %>% filter(gametime > 0) %>%arrange(gametime)
pbp_final
}
value <- scrape_pbp("201911190LAL")
head(value)
scrape_pbp <- function(game_url){
#game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
#head(pbp_tot)
colnames(pbp_tot)[3] <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[5] <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)
## Need to split by Quarter
second_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "2nd Q"))
third_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),] %>% mutate(Quarter = 1)
second_q <- pbp_tot[(second_lim + 1):(third_lim - 1),] %>% mutate(Quarter = 2)
third_q <- pbp_tot[(third_lim + 1):(fourth_lim - 1),] %>% mutate(Quarter = 3)
fourth_q <- pbp_tot[(fourth_lim + 1):length(pbp_tot),] %>% mutate(Quarter = 4)
pbp_fix <- rbind(first_q, second_q, third_q, fourth_q)
#head(pbp_fix)
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>%
gather(key = "Team_Score", value = "Delta Score", c("Oklahoma City-Score","LA Lakers-Score")) %>% filter(length(`Delta Score`) > 3) %>%
filter(`Delta Score` != '') %>%
mutate(gametime = Quarter*720 - as.numeric(ms(Time))) %>% filter(gametime > 0) %>%arrange(gametime)
pbp_final
}
value <- scrape_pbp("201911190LAL")
head(value)
scrape_pbp <- function(game_url){
#game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
#head(pbp_tot)
away_team <- colnames(pbp_tot[2])
home_team <- colnames(pbp_tot[6])
away_score <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[3] <- away_score
home_score <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)[5] <- home_score
#colnames(pbp_tot)
## Need to split by Quarter
second_lim <- which(str_detect(pbp_tot[, away_score], "2nd Q"))
third_lim <- which(str_detect(pbp_tot[, away_score], "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot[, away_score], "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),] %>% mutate(Quarter = 1)
second_q <- pbp_tot[(second_lim + 1):(third_lim - 1),] %>% mutate(Quarter = 2)
third_q <- pbp_tot[(third_lim + 1):(fourth_lim - 1),] %>% mutate(Quarter = 3)
fourth_q <- pbp_tot[(fourth_lim + 1):length(pbp_tot),] %>% mutate(Quarter = 4)
pbp_fix <- rbind(first_q, second_q, third_q, fourth_q)
#head(pbp_fix)
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((away_score != "") & (Team == away_team)) | ((home_score != "") & (Team == home_team))) %>%
gather(key = "Team_Score", value = "Delta Score", c(away_score, home_score)) %>% filter(length(`Delta Score`) > 3) %>%
filter(`Delta Score` != '') %>%
mutate(gametime = Quarter*720 - as.numeric(ms(Time))) %>% filter(gametime > 0) %>%arrange(gametime)
pbp_final
}
value <- scrape_pbp("201911190LAL")
library(tidyverse)  # for data wrangling
library(janitor)  # for data cleaning
library(rvest)      # for web scraping
library(corrplot)   # correlation plots
library(lubridate)
value <- scrape_pbp("201911190LAL")
head(value)
value <- scrape_pbp("201911210PHO")
scrape_pbp <- function(game_url){
#game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
#head(pbp_tot)
away_team <- colnames(pbp_tot[2])
home_team <- colnames(pbp_tot[6])
away_score <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[3] <- away_score
home_score <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)[5] <- home_score
#colnames(pbp_tot)
## Need to split by Quarter
second_lim <- which(str_detect(pbp_tot[, away_score], "2nd Q"))
third_lim <- which(str_detect(pbp_tot[, away_score], "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot[, away_score], "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),] %>% mutate(Quarter = 1)
second_q <- pbp_tot[(second_lim + 1):(third_lim - 1),] %>% mutate(Quarter = 2)
third_q <- pbp_tot[(third_lim + 1):(fourth_lim - 1),] %>% mutate(Quarter = 3)
fourth_q <- pbp_tot[(fourth_lim + 1):length(pbp_tot),] %>% mutate(Quarter = 4)
pbp_fix <- rbind(first_q, second_q, third_q, fourth_q)
#head(pbp_fix)
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c(away_team, home_team)) %>%
filter(((away_score != "") & (Team == away_team)) | ((home_score != "") & (Team == home_team))) %>%
gather(key = "Team_Score", value = "Delta Score", c(away_score, home_score)) %>% filter(length(`Delta Score`) > 3) %>%
filter(`Delta Score` != '') %>%
mutate(gametime = Quarter*720 - as.numeric(ms(Time))) %>% filter(gametime > 0) %>%arrange(gametime)
pbp_final
}
value <- scrape_pbp("201911210PHO")
head(value)
scrape_pbp <- function(game_url){
#game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
#head(pbp_tot)
away_team <- colnames(pbp_tot[2])
home_team <- colnames(pbp_tot[6])
away_score <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[3] <- away_score
home_score <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)[5] <- home_score
#colnames(pbp_tot)
## Need to split by Quarter
second_lim <- which(str_detect(pbp_tot[, away_score], "2nd Q"))
third_lim <- which(str_detect(pbp_tot[, away_score], "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot[, away_score], "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),] %>% mutate(Quarter = 1)
second_q <- pbp_tot[(second_lim + 1):(third_lim - 1),] %>% mutate(Quarter = 2)
third_q <- pbp_tot[(third_lim + 1):(fourth_lim - 1),] %>% mutate(Quarter = 3)
fourth_q <- pbp_tot[(fourth_lim + 1):length(pbp_tot),] %>% mutate(Quarter = 4)
pbp_fix <- rbind(first_q, second_q, third_q, fourth_q)
#head(pbp_fix)
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c(away_team, home_team)) %>%
filter(((away_score != "") & (Team == away_team)) | ((home_score != "") & (Team == home_team))) %>%
gather(key = "Team_Score", value = "Delta Score", c(away_score, home_score)) %>% filter(length(`Delta Score`) < 3) %>%
filter(`Delta Score` != '') %>%
mutate(gametime = Quarter*720 - as.numeric(ms(Time))) %>% filter(gametime > 0) %>%arrange(gametime)
pbp_final
}
value <- scrape_pbp("201911210PHO")
head(value)
scrape_pbp <- function(game_url){
#game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
#head(pbp_tot)
away_team <- colnames(pbp_tot[2])
home_team <- colnames(pbp_tot[6])
away_score <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[3] <- away_score
home_score <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)[5] <- home_score
#colnames(pbp_tot)
## Need to split by Quarter
second_lim <- which(str_detect(pbp_tot[, away_score], "2nd Q"))
third_lim <- which(str_detect(pbp_tot[, away_score], "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot[, away_score], "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),] %>% mutate(Quarter = 1)
second_q <- pbp_tot[(second_lim + 1):(third_lim - 1),] %>% mutate(Quarter = 2)
third_q <- pbp_tot[(third_lim + 1):(fourth_lim - 1),] %>% mutate(Quarter = 3)
fourth_q <- pbp_tot[(fourth_lim + 1):length(pbp_tot),] %>% mutate(Quarter = 4)
pbp_fix <- rbind(first_q, second_q, third_q, fourth_q)
#head(pbp_fix)
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c(away_team, home_team)) %>%
filter(((away_score != "") & (Team == away_team)) | ((home_score != "") & (Team == home_team))) %>%
gather(key = "Team_Score", value = "Delta Score", c(away_score, home_score)) %>% filter(length(`Delta Score`) > 3) %>%
filter(`Delta Score` != '') %>%
mutate(gametime = Quarter*720 - as.numeric(ms(Time))) %>% filter(gametime > 0) %>%arrange(gametime)
pbp_final
}
value <- scrape_pbp("201911210PHO")
head(value)
scrape_pbp_test <- function(game_url){
#game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
#head(pbp_tot)
colnames(pbp_tot)[3] <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[5] <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)
## Need to split by Quarter
second_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "2nd Q"))
third_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot$`Oklahoma City-Score`, "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),] %>% mutate(Quarter = 1)
second_q <- pbp_tot[(second_lim + 1):(third_lim - 1),] %>% mutate(Quarter = 2)
third_q <- pbp_tot[(third_lim + 1):(fourth_lim - 1),] %>% mutate(Quarter = 3)
fourth_q <- pbp_tot[(fourth_lim + 1):length(pbp_tot),] %>% mutate(Quarter = 4)
pbp_fix <- rbind(first_q, second_q, third_q, fourth_q)
#head(pbp_fix)
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c("Oklahoma City", "LA Lakers")) %>%
filter(((`Oklahoma City-Score` != "") & (Team == "Oklahoma City")) | ((`LA Lakers-Score` != "") & (Team == "LA Lakers"))) %>%
gather(key = "Team_Score", value = "Delta Score", c("Oklahoma City-Score","LA Lakers-Score")) %>% filter(length(`Delta Score`) > 3) %>%
filter(`Delta Score` != '') %>%
mutate(gametime = Quarter*720 - as.numeric(ms(Time))) %>% filter(gametime > 0) %>%arrange(gametime)
pbp_final
}
value <- scrape_pbp_test("201911190LAL")
head(value)
scrape_pbp <- function(game_url){
#game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
#head(pbp_tot)
away_team <- colnames(pbp_tot[2])
home_team <- colnames(pbp_tot[6])
away_score <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[3] <- away_score
home_score <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)[5] <- home_score
#colnames(pbp_tot)
## Need to split by Quarter
second_lim <- which(str_detect(pbp_tot[, away_score], "2nd Q"))
third_lim <- which(str_detect(pbp_tot[, away_score], "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot[, away_score], "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),] %>% mutate(Quarter = 1)
second_q <- pbp_tot[(second_lim + 1):(third_lim - 1),] %>% mutate(Quarter = 2)
third_q <- pbp_tot[(third_lim + 1):(fourth_lim - 1),] %>% mutate(Quarter = 3)
fourth_q <- pbp_tot[(fourth_lim + 1):length(pbp_tot),] %>% mutate(Quarter = 4)
pbp_fix <- rbind(first_q, second_q, third_q, fourth_q)
#head(pbp_fix)
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c(away_team, home_team)) %>%
filter(((away_score != "") & (Team == away_team)) | ((home_score != "") & (Team == home_team))) %>%
gather(key = "Team_Score", value = "Delta Score", c(away_score, home_score)) %>% filter(length(`Delta Score`) > 3) %>%
filter(`Delta Score` != '') %>%
mutate(gametime = Quarter*720 - as.numeric(ms(Time))) %>% filter(gametime > 0)%>% filter(Event != '' ) %>%arrange(gametime)
pbp_final
}
value <- scrape_pbp("201911210PHO")
head(value)
scrape_pbp <- function(game_url){
#game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
#head(pbp_tot)
away_team <- colnames(pbp_tot[2])
home_team <- colnames(pbp_tot[6])
away_score <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[3] <- away_score
home_score <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)[5] <- home_score
#colnames(pbp_tot)
## Need to split by Quarter
second_lim <- which(str_detect(pbp_tot[, away_score], "2nd Q"))
third_lim <- which(str_detect(pbp_tot[, away_score], "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot[, away_score], "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),] %>% mutate(Quarter = 1)
second_q <- pbp_tot[(second_lim + 1):(third_lim - 1),] %>% mutate(Quarter = 2)
third_q <- pbp_tot[(third_lim + 1):(fourth_lim - 1),] %>% mutate(Quarter = 3)
fourth_q <- pbp_tot[(fourth_lim + 1):length(pbp_tot),] %>% mutate(Quarter = 4)
pbp_fix <- rbind(first_q, second_q, third_q, fourth_q)
#head(pbp_fix)
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c(away_team, home_team)) %>%
filter(((away_score != "") & (Team == away_team)) | ((home_score != "") & (Team == home_team))) %>%
gather(key = "Team_Score", value = "Delta Score", c(away_score, home_score)) %>% filter(length(`Delta Score`) > 3) %>%
filter(`Delta Score` != '') %>%
mutate(gametime = Quarter*720 - as.numeric(ms(Time))) %>% filter(gametime > 0)%>% filter(Event != '') %>%
mutate(home = case_when(Team == home_team ~ 1
Team != home_team ~ 0)) %>% arrange(gametime)
scrape_pbp <- function(game_url){
#game_url <- "201911190LAL"
url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
pbp_tot <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
colnames(pbp_tot) <- as.character(unlist(pbp_tot[1,]))
pbp_tot = pbp_tot[-1, ]
#head(pbp_tot)
away_team <- colnames(pbp_tot[2])
home_team <- colnames(pbp_tot[6])
away_score <- paste0(colnames(pbp_tot[2]), "-Score")
colnames(pbp_tot)[3] <- away_score
home_score <- paste0(colnames(pbp_tot[6]), "-Score")
colnames(pbp_tot)[5] <- home_score
#colnames(pbp_tot)
## Need to split by Quarter
second_lim <- which(str_detect(pbp_tot[, away_score], "2nd Q"))
third_lim <- which(str_detect(pbp_tot[, away_score], "3rd Q"))
fourth_lim <- which(str_detect(pbp_tot[, away_score], "4th Q"))
first_q <- pbp_tot[1:(second_lim - 1),] %>% mutate(Quarter = 1)
second_q <- pbp_tot[(second_lim + 1):(third_lim - 1),] %>% mutate(Quarter = 2)
third_q <- pbp_tot[(third_lim + 1):(fourth_lim - 1),] %>% mutate(Quarter = 3)
fourth_q <- pbp_tot[(fourth_lim + 1):length(pbp_tot),] %>% mutate(Quarter = 4)
pbp_fix <- rbind(first_q, second_q, third_q, fourth_q)
#head(pbp_fix)
pbp_final <- pbp_fix %>% gather(key = "Team", value = "Event", c(away_team, home_team)) %>%
filter(((away_score != "") & (Team == away_team)) | ((home_score != "") & (Team == home_team))) %>%
gather(key = "Team_Score", value = "Delta Score", c(away_score, home_score)) %>% filter(length(`Delta Score`) > 3) %>%
filter(`Delta Score` != '') %>%
mutate(gametime = Quarter*720 - as.numeric(ms(Time))) %>% filter(gametime > 0)%>% filter(Event != '') %>%
mutate(home = case_when(Team == home_team ~ 1,
Team != home_team ~ 0)) %>% arrange(gametime)
pbp_final
}
value <- scrape_pbp("201911210PHO")
head(value)
library(tidyverse)  # for data wrangling
library(janitor)  # for data cleaning
library(rvest)      # for web scraping
library(corrplot)   # correlation plots
library(lubridate)
urloct <- "https://www.basketball-reference.com/leagues/NBA_2019_games-october.html"
#url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
game_dates <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
head(game_dates)
url <- "https://www.basketball-reference.com/leagues/NBA_2019_games-october.html"
#url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
game_dates <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
head(game_dates)
mdy(game_dates$Date)
summary(mdy(game_dates$Date))
sum(is.na(mdy(game_dates$Date)))
game_dates$Date <- mdy(game_dates$Date)
head(game_dates)
#url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
game_dates <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
head(game_dates)
games_dates <- games_dates %>% mutate(day_of_week = str_sub(Date, 1, 3))
game_dates <- games_dates %>% mutate(day_of_week = str_sub(Date, 1, 3))
#url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
game_dates <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
game_dates <- games_dates %>% mutate(day_of_week = str_sub(Date, 1, 3))
game_dates <- game_dates %>% mutate(day_of_week = str_sub(Date, 1, 3))
#url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
game_dates <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
head(game_dates)
game_dates <- game_dates[,1:6] %>% mutate(day_of_week = str_sub(Date, 1, 3))
game_dates$Date <- mdy(game_dates$Date)
head(game_dates)
url <- "https://www.basketball-reference.com/leagues/NBA_2019_games-october.html"
#url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
boxscores_scrape <- function(url){
game_dates <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
game_dates <- game_dates[,1:6] %>% mutate(day_of_week = str_sub(Date, 1, 3))
game_dates$Date <- mdy(game_dates$Date)
game_dates
}
months <- c("october", "november", "december", "january", "february", "march", "april", "may", "june")
urls <- "https://www.basketball-reference.com/leagues/NBA_2019_games-" + months + ".html"
urls <- str_c("https://www.basketball-reference.com/leagues/NBA_2019_games-" + months + ".html")
months <- c("october", "november", "december", "january", "february", "march", "april", "may", "june")
urls <- str_c("https://www.basketball-reference.com/leagues/NBA_2019_games-", months, ".html")
urls
url <- "https://www.basketball-reference.com/leagues/NBA_2019_games-october.html"
#url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
boxscores_scrape <- function(url){
game_dates <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
game_dates <- game_dates[,1:6] %>% mutate(day_of_week = str_sub(Date, 1, 3))
game_dates$Date <- mdy(game_dates$Date)
game_dates
}
months <- c("november", "december", "january", "february", "march", "april", "may", "june")
urls <- str_c("https://www.basketball-reference.com/leagues/NBA_2019_games-", months, ".html")
retain <- boxscores_scrape(url)
for (i in 1:urls){
temp <- boxscores_scrape(urls[i])
retain <- rbind(retain, temp)
}
temp <- boxscores_scrape(urls[i])
for (i in 1:urls){
temp <- boxscores_scrape(urls[i])
retain <- rbind(retain, temp)
}
url <- "https://www.basketball-reference.com/leagues/NBA_2019_games-october.html"
#url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
boxscores_scrape <- function(url){
game_dates <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
game_dates <- game_dates[,1:6] %>% mutate(day_of_week = str_sub(Date, 1, 3))
game_dates$Date <- mdy(game_dates$Date)
game_dates
}
months <- c("november", "december", "january", "february", "march", "april", "may", "june")
urls <- str_c("https://www.basketball-reference.com/leagues/NBA_2019_games-", months, ".html")
retain <- boxscores_scrape(url)
for (i in 1:urls){
temp <- boxscores_scrape(urls[i])
retain <- rbind(retain, temp)
}
url <- "https://www.basketball-reference.com/leagues/NBA_2019_games-october.html"
#url <- paste0("https://www.basketball-reference.com/boxscores/pbp/",game_url,".html")
boxscores_scrape <- function(url){
game_dates <- url %>%
read_html() %>%
html_table() %>%
.[[1]]
game_dates <- game_dates[,1:6] %>% mutate(day_of_week = str_sub(Date, 1, 3))
game_dates$Date <- mdy(game_dates$Date)
game_dates
}
months <- c("november", "december", "january", "february", "march", "april", "may", "june")
urls <- str_c("https://www.basketball-reference.com/leagues/NBA_2019_games-", months, ".html")
retain <- boxscores_scrape(url)
for (i in 1:length(urls)){
temp <- boxscores_scrape(urls[i])
retain <- rbind(retain, temp)
}
summary(retain)
head(retain)
summary(retain)
head(filter(retain, is.na(Date))
head(filter(retain, is.na(Date)))
head(filter(retain, is.na(Date)))
game_data <- filter(retain, is.na(Date))
head(game_data)
game_data <- filter(retain, !is.na(Date))
head(game_data)
install.packages("datapasta")
